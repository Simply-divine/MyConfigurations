{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"initialize": {
		"prefix": "init",
		"body": [
			"#include<bits\/stdc++.h>\r\n\/\/#include <ext\/pb_ds\/assoc_container.hpp>\r\n#define F first\r\n#define S second\r\n#define pb push_back\r\n#define mp make_pair \r\n#define rep(i,a,b) for(int i = a; i <= b; i++)\r\n#define rrep(i,a,b) for(int i = a; i >=b; i--)\r\n#define debug(x) cout << '>' << #x << ':' << x << endl;\r\n#define sq(a) (a)*(a)\r\n#define nl \"\\n\"\r\n#define all(x) (x).begin(),(x).end()\r\nusing namespace std;\r\n\/\/using namespace __gnu_pbds;\r\n\/\/typedef tree<int,null_type,less<int>,rb_tree_tag,\r\n\/\/tree_order_statistics_node_update> indexed_set;\r\n\r\nusing ll = long long;\r\nusing ld = long double;\r\nusing uint = unsigned int;\r\nusing ull = unsigned long long;\r\nusing ii = pair<int, int>;\r\nusing pli = pair<ll, int>;\r\nusing vi = vector<int>;\r\nusing vll = vector<ll>;\r\nusing pll = pair<ll, ll>;\r\nusing pil = pair<int,ll>;\r\nusing vvi = vector<vi>;\r\nusing vpi = vector<ii>;\r\n\r\nconst int N = 100100;\r\nll mod=1000000007;\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    $1\r\n    return 0;\r\n}\r\n"
		],
		"description": "Log output to console"
	}
}

